{
  "name": "@matechs/preview",
  "version": "0.1.0",
  "license": "MIT",
  "private": false,
  "scripts": {
    "clean": "rimraf build tsbuildinfo",
    "build:lib": "tsc --build tsconfig.build.json && ts-node ../../scripts/package.ts",
    "build:es6": "tsc --build tsconfig.es6.json && ts-node ../../scripts/rewrite-esm.ts && babel build/esm/ -d build/esm/ -s --plugins annotate-pure-calls",
    "build:post-process": "ts-node ../../scripts/rewrite-source-maps.ts && ts-node ../../scripts/rewrite-locals.ts",
    "build": "yarn run build:lib && yarn run build:es6 && yarn run build:post-process",
    "lint": "eslint . --ext .ts,.tsx",
    "autofix": "yarn prettier && yarn lint --fix && yarn prettier",
    "prettier": "prettier --write \"./{src,test,demo}/**/*.ts\"",
    "tc": "tsc --noEmit"
  },
  "publishConfig": {
    "access": "public",
    "directory": "build"
  },
  "repository": "https://github.com/mikearnaldi/matechs-effect.git",
  "sideEffects": false,
  "devDependencies": {
    "@babel/cli": "^7.10.5",
    "@types/node": "^14.0.5",
    "babel-plugin-annotate-pure-calls": "^0.4.0"
  },
  "config": {
    "modules": [
      "_abstract",
      "_abstract/Any",
      "_abstract/Applicative",
      "_abstract/Associative",
      "_abstract/AssociativeBoth",
      "_abstract/AssociativeEither",
      "_abstract/AssociativeFlatten",
      "_abstract/Bounded",
      "_abstract/Closure",
      "_abstract/Commutative",
      "_abstract/CommutativeBoth",
      "_abstract/CommutativeEither",
      "_abstract/Contravariant",
      "_abstract/Covariant",
      "_abstract/Derive",
      "_abstract/DSL",
      "_abstract/Equal",
      "_abstract/Foldable",
      "_abstract/FoldMap",
      "_abstract/FX",
      "_abstract/FX/Access",
      "_abstract/FX/Environmental",
      "_abstract/FX/Fail",
      "_abstract/FX/IdentityErr",
      "_abstract/FX/Recover",
      "_abstract/HKT",
      "_abstract/Identity",
      "_abstract/IdentityBoth",
      "_abstract/IdentityEither",
      "_abstract/IdentityFlatten",
      "_abstract/Invariant",
      "_abstract/Inverse",
      "_abstract/Monad",
      "_abstract/Newtype",
      "_abstract/None",
      "_abstract/Ord",
      "_abstract/Ordering",
      "_abstract/Reduce",
      "_abstract/ReduceRight",
      "_abstract/Show",
      "_abstract/Traversable",
      "_abstract/TraversableWithKeys",
      "_abstract/Witherable",
      "_abstract/WitherableWithKeys",
      "_abstract/Wiltable",
      "_abstract/WiltableWithKeys",
      "_system",
      "_system/Array",
      "_system/Cause",
      "_system/Clock",
      "_system/Effect",
      "_system/Either",
      "_system/Exit",
      "_system/Fiber",
      "_system/FiberRef",
      "_system/Function",
      "_system/Has",
      "_system/Iterable",
      "_system/Layer",
      "_system/Managed",
      "_system/Map",
      "_system/Mutable",
      "_system/NonEmptyArray",
      "_system/Option",
      "_system/ProcessManager",
      "_system/Promise",
      "_system/Queue",
      "_system/Random",
      "_system/Ref",
      "_system/RefM",
      "_system/Schedule",
      "_system/Scope",
      "_system/Semaphore",
      "_system/Stack",
      "_system/Stream",
      "_system/Stream/_internal",
      "_system/Stream/BufferedPull",
      "_system/Stream/Pull",
      "_system/Stream/Push",
      "_system/Stream/Sink",
      "_system/Stream/Stream",
      "_system/Stream/Take",
      "_system/Stream/Transducer",
      "_system/Supervisor",
      "_system/Support",
      "_system/Support/AtomicBoolean",
      "_system/Support/AtomicNumber",
      "_system/Support/AtomicReference",
      "_system/Support/DublyLinkedList",
      "_system/Support/ImmutableQueue",
      "_system/Support/LinkedList",
      "_system/Support/MutableQueue",
      "_system/Support/OneShot",
      "_system/Support/Scheduler",
      "_system/Utils",
      "_system/XPure",
      "Array",
      "Associative",
      "Boolean",
      "Cause",
      "Clock",
      "Closure",
      "Const",
      "Effect",
      "EffectAsync",
      "Either",
      "Equal",
      "Exit",
      "Fiber",
      "FiberRef",
      "Function",
      "Has",
      "Id",
      "Identity",
      "Iterable",
      "Layer",
      "Managed",
      "Map",
      "Newtype",
      "NonEmptyArray",
      "Option",
      "Ord",
      "ProcessManager",
      "Promise",
      "Queue",
      "Random",
      "Reader",
      "Record",
      "Ref",
      "RefM",
      "Schedule",
      "Scope",
      "Semaphore",
      "State",
      "Stream",
      "Stream/BufferedPull",
      "Stream/Pull",
      "Stream/Push",
      "Stream/Sink",
      "Stream/Take",
      "Stream/Transducer",
      "String",
      "Supervisor",
      "Utils",
      "XPure"
    ]
  }
}
